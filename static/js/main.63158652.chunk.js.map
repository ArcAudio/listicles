{"version":3,"sources":["AnswerContainer.js","ToDoItems.js","TodoList.js","index.js"],"names":["xhr","TodoItems","item","text","key","listItems","this","props","entries","map","createTasks","className","Component","AnswerContainer","context","state","answer","processRequest","bind","XMLHttpRequest","answ","open","send","addEventListener","readyState","status","response","JSON","parse","responseText","setState","TodoList","items","addItem","e","_inputElement","value","newItem","Date","now","prevState","concat","console","log","preventDefault","onSubmit","ref","a","placeholder","type","destination","document","querySelector","ReactDOM","render"],"mappings":"4JAEIA,E,yECiBWC,E,iKAhBb,SAAYC,GACV,OAAO,+BAAoBA,EAAKC,KAAzB,MAASD,EAAKE,O,oBAGvB,WACE,IACIC,EADcC,KAAKC,MAAMC,QACDC,IAAIH,KAAKI,aAErC,OACE,oBAAIC,UAAU,UAAd,SACKN,Q,GAXaO,aDwCTC,G,wDAtCX,WAAYN,EAAOO,GAAU,IAAD,8BACxB,cAAMP,EAAOO,IAERC,MAAQ,CACXC,OAAQ,OAGV,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAPE,E,qDAU1B,WACElB,EAAM,IAAImB,eACQb,KAAKC,MAAMa,KAG7BpB,EAAIqB,KAAK,MAFS,oEAEW,GAC7BrB,EAAIsB,OAEJtB,EAAIuB,iBAAiB,mBAAoBjB,KAAKW,gBAAgB,K,4BAGhE,WACE,GAAuB,IAAnBjB,EAAIwB,YAAmC,MAAfxB,EAAIyB,OAAgB,CAC9C,IAAIC,EAAWC,KAAKC,MAAM5B,EAAI6B,cAE9BvB,KAAKwB,SAAS,CACZd,OAAQU,EAASvB,U,oBAKvB,WACE,OACI,8BAAMG,KAAKS,MAAMC,a,GAlCCJ,cEoDfmB,E,kDAhDX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IAEDQ,MAAQ,CACTiB,MAAO,IAGX,EAAKC,QAAU,EAAKA,QAAQf,KAAb,gBAPA,E,2CAUjB,SAAQgB,GACN,GAAiC,KAA7B5B,KAAK6B,cAAcC,MAAc,CACnC,IAAIC,EAAU,CACZlC,KAAMG,KAAK6B,cAAcC,MACzBhC,IAAKkC,KAAKC,OAEZjC,KAAKwB,UAAS,SAACU,GACb,MAAO,CACLR,MAAOQ,EAAUR,MAAMS,OAAOJ,OAGlC/B,KAAK6B,cAAcC,MAAQ,GAG7BM,QAAQC,IAAIrC,KAAKS,MAAMiB,OACvBE,EAAEU,mB,oBAGR,WAAU,IAAD,OACP,OACE,sBAAKjC,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,UACE,uBAAMkC,SAAUvC,KAAK2B,QAArB,UAEA,uBAAOa,IAAK,SAACC,GAAD,OAAO,EAAKZ,cAAgBY,GACvCC,YAAY,iBAEX,wBAAQC,KAAK,SAAb,oBAGF,cAAC,EAAD,CAAiB7B,KAAMd,KAAKS,MAAMiB,WAEpC,cAAC,EAAD,CAAWxB,QAASF,KAAKS,MAAMiB,e,GA5ChBpB,aCDnBsC,EAAcC,SAASC,cAAc,cAEzCC,IAASC,OACL,8BACK,cAAC,EAAD,MAELJ,K","file":"static/js/main.63158652.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nvar xhr;\nclass AnswerContainer extends Component {\n    constructor(props, context) {\n        super(props, context);\n    \n        this.state = {\n          answer: \"...\"\n        };\n    \n        this.processRequest = this.processRequest.bind(this);\n      }\n    \n      componentDidMount() {\n        xhr = new XMLHttpRequest();\n        var todoEntries = this.props.answ;\n        var link_string = 'https://crypto-authors-cypher.herokuapp.com/check-answer?answer=';\n        //var answerlink = (link_string.concat(UsersEntry)); // UsersEntry Yet to be put in\n        xhr.open(\"GET\", link_string, true);\n        xhr.send();\n    \n        xhr.addEventListener(\"readystatechange\", this.processRequest, false);\n      }\n    \n      processRequest() {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          var response = JSON.parse(xhr.responseText);\n    \n          this.setState({\n            answer: response.text\n          });\n        }\n      }\n    \n      render() {\n        return (\n            <div>{this.state.answer}</div>\n        );\n      }\n    };\n\nexport default AnswerContainer;","import React, { Component } from \"react\";\n \nclass TodoItems extends Component {\n  createTasks(item) {\n    return <li key={item.key}>{item.text} </li>\n  }\n \n  render() {\n    var todoEntries = this.props.entries;\n    var listItems = todoEntries.map(this.createTasks);\n \n    return (\n      <ul className=\"theList\">\n          {listItems}\n      </ul>\n    );\n  }\n};\n\nexport default TodoItems;","import React, { Component } from \"react\";\nimport TodoItems from \"./ToDoItems\";\nimport \"./ToDoList.css\";\nimport AnswerContainer from \"./AnswerContainer\";\n\nclass TodoList extends Component {\n\n    constructor(props) {\n        super(props);\n     \n        this.state = {\n            items: []\n          };\n\n        this.addItem = this.addItem.bind(this);\n      }\n       \n      addItem(e) {\n        if (this._inputElement.value !== \"\") {\n          var newItem = {\n            text: this._inputElement.value,\n            key: Date.now()\n          };\n          this.setState((prevState) => {\n            return { \n              items: prevState.items.concat(newItem) \n            };\n          });\n          this._inputElement.value = \"\";\n        } \n        \n        console.log(this.state.items);   \n        e.preventDefault();\n        }\n\n  render() {\n    return (\n      <div className=\"todoListMain\">\n        <div className=\"header\">\n          <form onSubmit={this.addItem}>\n              \n          <input ref={(a) => this._inputElement = a} \n           placeholder=\"Enter Answer\">\n            </input>\n            <button type=\"Submit\">add</button>\n            \n          </form>\n          <AnswerContainer answ={this.state.items}/>\n        </div>\n        <TodoItems entries={this.state.items}/>\n      </div>\n    );\n  }\n}\n \nexport default TodoList;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport TodoList from \"./TodoList\";\nvar destination = document.querySelector(\"#container\");\n  \nReactDOM.render(\n    <div>\n         <TodoList/>\n    </div>,\n    destination\n);"],"sourceRoot":""}